{"version":3,"sources":["components/Filter.js","components/Header.js","components/Footer.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","placeholder","value","filter","onChange","handleFilter","Header","text","Footer","style","color","fontStyle","fontSize","Notification","message","includes","className","baseUrl","axios","get","then","response","data","newObject","post","id","delete","Form","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","setPersons","setNotification","persons","personObject","name","number","onClick","event","preventDefault","window","confirm","console","log","personService","p","catch","error","setTimeout","App","useState","setNewName","setNewNumber","setFilter","notification","useEffect","initialPersons","filteredPersons","toLowerCase","target","returnedPerson","concat","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bba844f.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n      <input placeholder=\"filter contacts\" value={props.filter} onChange={props.handleFilter}/>\r\n    )\r\n  }\r\n\r\n  export default Filter","import React from \"react\";\r\n\r\nconst Header = ({text}) => <h2>{text}</h2>\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>phonebook app by Lukas Vidfar, 2021</em>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Footer","import React from \"react\"\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    } else if(message.includes('successfully')) {\r\n        return (\r\n            <div className=\"success\">\r\n              {message}\r\n            </div>\r\n          )\r\n    } else if(message.includes('already')) {\r\n        return (\r\n            <div className=\"error\">\r\n              {message}\r\n            </div>\r\n          )\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {\r\n      return response.data\r\n    })\r\n  }\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst update = (id, newObject) => {\r\n  const request =  axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return (\r\n      request.then(response => response.data)\r\n  )\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create,\r\n  update,\r\n  remove\r\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport path from 'path'\n\nconst Form = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addPerson}>\n        <input placeholder=\"add name\" value={props.newName} onChange={props.handleNameChange}/>\n        <br/>\n        <input placeholder=\"add number\"value={props.newNumber} onChange={props.handleNumberChange}/>\n        <br/>\n        <button type=\"submit\" >save</button>\n      </form>\n    </div>\n  )\n}\n\nconst Person = ({person, setPersons,setNotification,personObject,persons}) => {\n  const removePerson = (event) => {\n      event.preventDefault()\n      if (window.confirm('do you want to delete?')) {\n          console.log(\"yes\")\n          personService\n          .remove(`${person.id}`)\n          .then(setPersons(persons.filter(p => p.name !== person.name)))\n          .catch(error => {\n            setNotification(`${person.name} was already removed from the phonebook`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 2000)\n          })\n          setNotification(`${person.name} was successfully removed in the phonebook`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 2000)\n      } else {\n          console.log(\"no\")\n      }\n    }\n  return (\n      <div>\n          <li> {person.name} {person.number} \n          <button onClick={removePerson}>  delete </button>\n          </li>\n      </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log('got all')\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n  //   const nameList = persons.map(p => p.name)\n  //   const numberList = persons.map(p => p.number)\n  //   if(nameList.includes(personObject.name)) {\n  //     window.alert(`${personObject.name} already in phonebook`)\n  //     const confirm = window.confirm(`would you like to change the number for ${personObject.name}?`)\n  //     if(confirm) {\n  //       const toUpdateID = persons.find(p => p.name === personObject.name).id\n  //       personService\n  //       .update(toUpdateID,personObject)\n  //       .then(returnedPerson => { \n  //         setPersons(persons.map(person => \n  //           person.name !== personObject.name ? person : returnedPerson))\n  //         setNotification(`${personObject.name} was successfully updated in the phonebook`)\n  //         setTimeout(() => {\n  //           setNotification(null)\n  //         }, 2000)\n  //       })\n  //       .catch(error => {\n  //         setNotification(`there was an error while updating, please refresh`)\n  //         setTimeout(() => {\n  //           setNotification(null)\n  //         }, 2000)\n  //       })\n  //       setNewName('')\n  //       setNewNumber('')\n  //   } \n  // }   else if (numberList.includes(personObject.number)) {\n  //     window.alert(`a contact with the number ${personObject.number} is already in phonebook`)\n  //     const confirm = window.confirm(`would you like to change the contact for ${personObject.number}?`)\n  //     if(confirm) {\n  //       const toUpdateID = persons.find(p => p.number === personObject.number).id\n  //       personService\n  //       .update(toUpdateID,personObject)\n  //       .then(returnedPerson => { \n  //         setPersons(persons.map(person => person.number !== personObject.number ? person : returnedPerson))\n  //         setNotification(`contact belonging to ${personObject.number} was successfully updated in the phonebook`)\n  //         setTimeout(() => {\n  //           setNotification(null)\n  //         }, 2000)\n  //       })\n  //       .catch(error => {\n  //         setNotification(`there was an error while updating, please refresh`)\n  //         setTimeout(() => {\n  //           setNotification(null)\n  //         }, 2000)\n  //       })\n  //       setNewName('')\n  //       setNewNumber('')\n  //     }\n  //   } else {\n      personService\n    .create(personObject)\n    .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n      setNotification(`${personObject.name} was successfully added to the phonebook`)\n      setTimeout(() => {\n        setNotification(null)\n      }, 2000)\n      setNewName('')\n      setNewNumber('')\n    })\n    .catch(error => {\n      console.log(error)\n      setNotification(`error: not able to add contact ${error.response.data}`)\n      setTimeout(() => {\n        setNotification(null)\n      }, 2000)\n    })\n  }\n// }\n\n  const filteredPersons = persons.filter(p => p.name.toLowerCase().includes(filter))\n\n  return (\n    <div>\n      <Notification message={notification} />\n      <Header text=\"phonebook app\" />\n      <Filter filter={filter} handleFilter={handleFilter} />\n      <Header text=\"add new\" />\n      <Form addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\n      <Header text=\"contacts\" />\n      <ul>\n        {filteredPersons.map(person => \n          <Person setPersons={setPersons} setNotification={setNotification} persons={persons} key={person.id} person={person}/>\n        )}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}